//  colors
// --------------------------------------------------

$bodyColor :        #2A2C39;
$white:             #FFFFFF;
$black:             #000000;
$greyF4 :           #F4F4F4;
$grey88 :           #888888;
$greyCC:            #CCCCCC;
$greyAA:            #AAAAAA;
$greyDD :           #DDDDDD;
$greyEE:            #EEEEEE;

$defautLinkColor :  #1b1e42;
$headerColor:       #2A2C39;
$redLNS:            #EC003F;
$beige:             #EDE0CE;



// retina.less
// A helper mixin for applying high-resolution background images (http://www.retinajs.com)

@mixin at2x($path, $at2x_path , $w: auto, $h: auto) {
  background-image: url($path);

  @media all and (-webkit-min-device-pixel-ratio : 1.5) {
    background-image: url($at2x_path);
    background-size: $w $h;
  }
}



@mixin fontbrand () {
    font-family: "helvetica neue", Arial, serif;
    font-weight: 400;
}



// triangles
// --------------------------------------------------
@mixin css_triangle($dir, $size, $color) {

    width: 0; 
    height: 0; 

    @if $dir == up {    
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;

    } @else if $dir == down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;

    } @else if $dir == left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent; 
        border-right: $size solid $color;         

    } @else if $dir == right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;  

    } @else if $dir == downRight {
        border-bottom: $size solid transparent;
        border-right: ($size*0.7) solid $color;
    } @else if $dir == leftTop {
        border-left: $size solid transparent;
        border-top: ($size*0.7) solid $color;  
    } 
}

// Translate rem
// --------------------------------------------------

@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
  line-height: 1.4em;
}


@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin rem-fallback($property, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value*16}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  } 

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  } 
  
  #{$property}: $pxValues; 
  #{$property}: $remValues; 
}


// BORDER RADIUS
// --------------------------------------------------

// Border Radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}





